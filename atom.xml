<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DayDream</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2020-12-09T15:02:49.066Z</updated>
  <id>/</id>
  
  <author>
    <name>断梦三生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git&amp;Github (三)版本穿梭</title>
    <link href="/2020/12/07/git-note-3/"/>
    <id>/2020/12/07/git-note-3/</id>
    <published>2020-12-07T11:39:23.224Z</published>
    <updated>2020-12-09T15:02:49.066Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;1、-git-log-git-reflog&quot;&gt;&lt;a href=&quot;#1、-git-log-git-reflog&quot; class=&quot;headerlink&quot; title=&quot;1、 git log / git reflog&quot;&gt;&lt;/a&gt;1、 git log / git
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="git&amp;github" scheme="/categories/%E7%BC%96%E7%A8%8B/git-github/"/>
    
    
      <category term="git" scheme="/tags/git/"/>
    
      <category term="github" scheme="/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Git&amp;Github (二)基本的添加提交操作</title>
    <link href="/2020/12/05/git-note-2/"/>
    <id>/2020/12/05/git-note-2/</id>
    <published>2020-12-05T14:19:42.065Z</published>
    <updated>2020-12-07T11:39:00.559Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一、基础命令&quot;&gt;&lt;a href=&quot;#一、基础命令&quot; class=&quot;headerlink&quot; title=&quot;一、基础命令&quot;&gt;&lt;/a&gt;一、基础命令&lt;/h1&gt;&lt;h2 id=&quot;1、git-status：&quot;&gt;&lt;a href=&quot;#1、git-status：&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="git&amp;github" scheme="/categories/%E7%BC%96%E7%A8%8B/git-github/"/>
    
    
      <category term="git" scheme="/tags/git/"/>
    
      <category term="github" scheme="/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>拓扑排序</title>
    <link href="/2020/12/04/topoorder/"/>
    <id>/2020/12/04/topoorder/</id>
    <published>2020-12-04T12:28:42.769Z</published>
    <updated>2020-12-07T12:58:43.671Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一、拓扑排序思路&quot;&gt;&lt;a href=&quot;#一、拓扑排序思路&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="算法" scheme="/categories/%E7%BC%96%E7%A8%8B/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="拓扑排序" scheme="/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Prim 求最优生成树</title>
    <link href="/2020/12/04/Prim/"/>
    <id>/2020/12/04/Prim/</id>
    <published>2020-12-04T06:27:32.929Z</published>
    <updated>2020-12-04T11:31:45.846Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Prim算法是典型的贪心算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一步：任选1个结点，作为子图G’的第一个结点。&lt;/li&gt;
&lt;li&gt;第二步：找出与G’相连、且不会与G’构成回路，且权值最小的边，并将该边及相邻结点收入G’。该步骤不断重复&lt;/li&gt;
&lt;/ul&gt;
&lt;h1
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="算法" scheme="/categories/%E7%BC%96%E7%A8%8B/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="图论" scheme="/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Git&amp;Github (一)基本介绍及初始化git</title>
    <link href="/2020/12/03/git-note-1/"/>
    <id>/2020/12/03/git-note-1/</id>
    <published>2020-12-03T12:46:10.202Z</published>
    <updated>2020-12-09T14:58:44.242Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一、版本控制工具应该具备的功能？&quot;&gt;&lt;a href=&quot;#一、版本控制工具应该具备的功能？&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="git&amp;github" scheme="/categories/%E7%BC%96%E7%A8%8B/git-github/"/>
    
    
      <category term="git" scheme="/tags/git/"/>
    
      <category term="github" scheme="/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Dijkstra算法·求单源最短路径</title>
    <link href="/2020/12/03/dijkstra/"/>
    <id>/2020/12/03/dijkstra/</id>
    <published>2020-12-03T10:22:00.547Z</published>
    <updated>2020-12-04T06:35:57.397Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原理不再赘述，请参阅&lt;a href=&quot;https://www.cnblogs.com/bigsai/p/11537975.html&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="算法" scheme="/categories/%E7%BC%96%E7%A8%8B/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="编程" scheme="/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>JLU数据结构·插入排序</title>
    <link href="/2020/12/02/insertSort/"/>
    <id>/2020/12/02/insertSort/</id>
    <published>2020-12-02T14:24:30.735Z</published>
    <updated>2020-12-02T15:28:25.774Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一、直接插入排序&quot;&gt;&lt;a href=&quot;#一、直接插入排序&quot; class=&quot;headerlink&quot; title=&quot;一、直接插入排序&quot;&gt;&lt;/a&gt;一、直接插入排序&lt;/h1&gt;&lt;h2 id=&quot;基础版：&quot;&gt;&lt;a href=&quot;#基础版：&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="数据结构" scheme="/categories/%E7%BC%96%E7%A8%8B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="排序" scheme="/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>python在Excel中的应用（一）</title>
    <link href="/2020/11/26/pyexcel1/"/>
    <id>/2020/11/26/pyexcel1/</id>
    <published>2020-11-26T13:31:40.867Z</published>
    <updated>2020-12-02T15:24:16.758Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一、-创建excel文件&quot;&gt;&lt;a href=&quot;#一、-创建excel文件&quot; class=&quot;headerlink&quot; title=&quot;一、 创建excel文件&quot;&gt;&lt;/a&gt;一、 创建excel文件&lt;/h1&gt;&lt;p&gt;创建空文件:&lt;/p&gt;
&lt;pre&gt;&lt;code
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="python" scheme="/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    
      <category term="编程" scheme="/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="python" scheme="/tags/python/"/>
    
      <category term="excel" scheme="/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>小tip:对STL中的queue执行清空操作</title>
    <link href="/2020/11/21/clear-for-queue/"/>
    <id>/2020/11/21/clear-for-queue/</id>
    <published>2020-11-21T12:02:29.871Z</published>
    <updated>2020-11-21T12:06:41.734Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;STL中的queue没有clear(清空队列)操作。&lt;br&gt;这里可以用到swap高效完成该功能：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-cpp&quot;&gt;//假设已经定义了 queue&amp;lt;int&amp;gt;
        
      
    
    </summary>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="悦读" scheme="/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>python 小白笔记</title>
    <link href="/2020/11/21/pythonNote/"/>
    <id>/2020/11/21/pythonNote/</id>
    <published>2020-11-21T03:09:12.394Z</published>
    <updated>2020-11-26T07:16:41.295Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;range-n-函数&quot;&gt;&lt;a href=&quot;#range-n-函数&quot; class=&quot;headerlink&quot; title=&quot;range(n)函数&quot;&gt;&lt;/a&gt;range(n)函数&lt;/h2&gt;&lt;p&gt;函数：range(start, stop[, step])&lt;/p&gt;
&lt;h3
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="python" scheme="/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    
      <category term="python" scheme="/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 116 填充树中每个节点的next指针</title>
    <link href="/2020/11/13/leetcode116/"/>
    <id>/2020/11/13/leetcode116/</id>
    <published>2020-11-13T15:37:03.681Z</published>
    <updated>2020-11-13T15:51:47.779Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 114. Flatten Binary Tree to Linked List 二叉树原地变链表</title>
    <link href="/2020/11/10/leetcode114/"/>
    <id>/2020/11/10/leetcode114/</id>
    <published>2020-11-10T03:46:07.835Z</published>
    <updated>2020-11-10T03:59:01.083Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 113. Path Sum II 二叉树路径和</title>
    <link href="/2020/11/10/leetcode113/"/>
    <id>/2020/11/10/leetcode113/</id>
    <published>2020-11-10T02:40:49.236Z</published>
    <updated>2020-11-10T02:55:18.241Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/path-sum-ii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;—&amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>BBCnews 2020/11/8 败选那天的特朗普</title>
    <link href="/2020/11/09/BBC%20news%2011-8/"/>
    <id>/2020/11/09/BBC news 11-8/</id>
    <published>2020-11-09T02:10:39.090Z</published>
    <updated>2020-11-10T01:22:45.513Z</updated>
    
    <summary type="html">
    
      这或许是一个故事的谢幕...
    
    </summary>
    
      <category term="英语新闻" scheme="/categories/%E8%8B%B1%E8%AF%AD%E6%96%B0%E9%97%BB/"/>
    
      <category term="BBC news" scheme="/categories/%E8%8B%B1%E8%AF%AD%E6%96%B0%E9%97%BB/BBC-news/"/>
    
    
      <category term="英语新闻" scheme="/tags/%E8%8B%B1%E8%AF%AD%E6%96%B0%E9%97%BB/"/>
    
      <category term="BBC news" scheme="/tags/BBC-news/"/>
    
  </entry>
  
  <entry>
    <title>快慢指针法的应用</title>
    <link href="/2020/11/07/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/"/>
    <id>/2020/11/07/快慢指针/</id>
    <published>2020-11-07T02:31:28.199Z</published>
    <updated>2020-11-07T03:49:26.614Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;所谓快慢指针法，指的是用两个前进步长不一致的指针对链表进行遍历。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1、快慢指针定位链表中点。&quot;&gt;&lt;a href=&quot;#1、快慢指针定位链表中点。&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="算法" scheme="/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="C++" scheme="/categories/%E7%AE%97%E6%B3%95/C/"/>
    
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="快慢指针" scheme="/tags/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 109 升序链表建立AVL树</title>
    <link href="/2020/11/07/leetcode109/"/>
    <id>/2020/11/07/leetcode109/</id>
    <published>2020-11-07T02:17:14.521Z</published>
    <updated>2020-11-10T01:45:19.254Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
      <category term="二分" scheme="/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 106 由中序和后序遍历序列建立树</title>
    <link href="/2020/11/05/leetcode106/"/>
    <id>/2020/11/05/leetcode106/</id>
    <published>2020-11-05T08:54:50.022Z</published>
    <updated>2020-11-05T08:59:05.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>leetcode105 从前序与中序遍历序列构造二叉树</title>
    <link href="/2020/11/05/leetcode105/"/>
    <id>/2020/11/05/leetcode105/</id>
    <published>2020-11-05T07:52:29.543Z</published>
    <updated>2020-11-05T07:59:44.013Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="C++" scheme="/tags/C/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 103  二叉树的锯齿形层次遍历</title>
    <link href="/2020/11/04/leetcode103/"/>
    <id>/2020/11/04/leetcode103/</id>
    <published>2020-11-04T13:32:35.676Z</published>
    <updated>2020-11-04T13:49:15.337Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/submissions/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 102 二叉树的层序遍历</title>
    <link href="/2020/11/04/leetcode102/"/>
    <id>/2020/11/04/leetcode102/</id>
    <published>2020-11-04T12:53:43.323Z</published>
    <updated>2020-11-04T13:00:55.461Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原题传送门&lt;a href=&quot;https://leetcode-cn.com/problems/binary-tree-level-order-traversal/submissions/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="编程" scheme="/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="leetcode" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/"/>
    
      <category term="c++" scheme="/categories/%E7%BC%96%E7%A8%8B/leetcode/c/"/>
    
    
      <category term="编程" scheme="/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="c++" scheme="/tags/c/"/>
    
      <category term="leetcode" scheme="/tags/leetcode/"/>
    
      <category term="树" scheme="/tags/%E6%A0%91/"/>
    
  </entry>
  
</feed>
